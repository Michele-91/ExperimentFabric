@inject IJSRuntime JS
@* @rendermode InteractiveWebAssembly *@
@rendermode InteractiveAuto
@* @implements IAsyncDisposable *@


@if (CardType == "shape")
{
    <div class="container h-40 w-80 p-3 shapes-card mb-5">
        <div class="row p-1 m-1 text-white">Disegno</div>
        <div class="row">
            @* <svg class="bi" aria-hidden="true"><use xlink:href="#box-seam"></use></svg> *@
            <div class="col d-flex">
                @*             <button type="button" class="border-white border-rounded bi bi-square">
            <svg class="bi" aria-hidden="true"><use xlink:href="#box-seam"></use></svg>
            </button> *@
                <button @onclick='() => ToggleBrush("pencil")' type="button" class="btn border-white border-2 m-1 @(PencilActive ? "shape-button-selected" : "shape-button") pencil-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"></path>
                    </svg>
                </button>
                <button @onclick='() => ToggleBrush("small")' type="button" class="btn border-white border-rounded border-2 m-1  @(SmallBrushActive ? "shape-button-selected" : "shape-button")">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-brush" viewBox="0 0 16 16">
                        <path d="M15.825.12a.5.5 0 0 1 .132.584c-1.53 3.43-4.743 8.17-7.095 10.64a6.1 6.1 0 0 1-2.373 1.534c-.018.227-.06.538-.16.868-.201.659-.667 1.479-1.708 1.74a8.1 8.1 0 0 1-3.078.132 4 4 0 0 1-.562-.135 1.4 1.4 0 0 1-.466-.247.7.7 0 0 1-.204-.288.62.62 0 0 1 .004-.443c.095-.245.316-.38.461-.452.394-.197.625-.453.867-.826.095-.144.184-.297.287-.472l.117-.198c.151-.255.326-.54.546-.848.528-.739 1.201-.925 1.746-.896q.19.012.348.048c.062-.172.142-.38.238-.608.261-.619.658-1.419 1.187-2.069 2.176-2.67 6.18-6.206 9.117-8.104a.5.5 0 0 1 .596.04M4.705 11.912a1.2 1.2 0 0 0-.419-.1c-.246-.013-.573.05-.879.479-.197.275-.355.532-.5.777l-.105.177c-.106.181-.213.362-.32.528a3.4 3.4 0 0 1-.76.861c.69.112 1.736.111 2.657-.12.559-.139.843-.569.993-1.06a3 3 0 0 0 .126-.75zm1.44.026c.12-.04.277-.1.458-.183a5.1 5.1 0 0 0 1.535-1.1c1.9-1.996 4.412-5.57 6.052-8.631-2.59 1.927-5.566 4.66-7.302 6.792-.442.543-.795 1.243-1.042 1.826-.121.288-.214.54-.275.72v.001l.575.575zm-4.973 3.04.007-.005zm3.582-3.043.002.001h-.002z"></path>
                    </svg>
                </button>
                <button @onclick='() => ToggleBrush("medium")' type="button" class="btn border-white border-rounded border-2 m-1  @(MediumBrushActive ? "shape-button-selected" : "shape-button")">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-brush" viewBox="0 0 16 16">
                        <path d="M15.825.12a.5.5 0 0 1 .132.584c-1.53 3.43-4.743 8.17-7.095 10.64a6.1 6.1 0 0 1-2.373 1.534c-.018.227-.06.538-.16.868-.201.659-.667 1.479-1.708 1.74a8.1 8.1 0 0 1-3.078.132 4 4 0 0 1-.562-.135 1.4 1.4 0 0 1-.466-.247.7.7 0 0 1-.204-.288.62.62 0 0 1 .004-.443c.095-.245.316-.38.461-.452.394-.197.625-.453.867-.826.095-.144.184-.297.287-.472l.117-.198c.151-.255.326-.54.546-.848.528-.739 1.201-.925 1.746-.896q.19.012.348.048c.062-.172.142-.38.238-.608.261-.619.658-1.419 1.187-2.069 2.176-2.67 6.18-6.206 9.117-8.104a.5.5 0 0 1 .596.04M4.705 11.912a1.2 1.2 0 0 0-.419-.1c-.246-.013-.573.05-.879.479-.197.275-.355.532-.5.777l-.105.177c-.106.181-.213.362-.32.528a3.4 3.4 0 0 1-.76.861c.69.112 1.736.111 2.657-.12.559-.139.843-.569.993-1.06a3 3 0 0 0 .126-.75zm1.44.026c.12-.04.277-.1.458-.183a5.1 5.1 0 0 0 1.535-1.1c1.9-1.996 4.412-5.57 6.052-8.631-2.59 1.927-5.566 4.66-7.302 6.792-.442.543-.795 1.243-1.042 1.826-.121.288-.214.54-.275.72v.001l.575.575zm-4.973 3.04.007-.005zm3.582-3.043.002.001h-.002z"></path>
                    </svg>
                </button>
                <button @onclick='() => ToggleBrush("big")' type="button" class="btn border-white border-rounded border-2 m-1  @(BigBrushActive ? "shape-button-selected" : "shape-button")">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-brush" viewBox="0 0 16 16">
                        <path d="M15.825.12a.5.5 0 0 1 .132.584c-1.53 3.43-4.743 8.17-7.095 10.64a6.1 6.1 0 0 1-2.373 1.534c-.018.227-.06.538-.16.868-.201.659-.667 1.479-1.708 1.74a8.1 8.1 0 0 1-3.078.132 4 4 0 0 1-.562-.135 1.4 1.4 0 0 1-.466-.247.7.7 0 0 1-.204-.288.62.62 0 0 1 .004-.443c.095-.245.316-.38.461-.452.394-.197.625-.453.867-.826.095-.144.184-.297.287-.472l.117-.198c.151-.255.326-.54.546-.848.528-.739 1.201-.925 1.746-.896q.19.012.348.048c.062-.172.142-.38.238-.608.261-.619.658-1.419 1.187-2.069 2.176-2.67 6.18-6.206 9.117-8.104a.5.5 0 0 1 .596.04M4.705 11.912a1.2 1.2 0 0 0-.419-.1c-.246-.013-.573.05-.879.479-.197.275-.355.532-.5.777l-.105.177c-.106.181-.213.362-.32.528a3.4 3.4 0 0 1-.76.861c.69.112 1.736.111 2.657-.12.559-.139.843-.569.993-1.06a3 3 0 0 0 .126-.75zm1.44.026c.12-.04.277-.1.458-.183a5.1 5.1 0 0 0 1.535-1.1c1.9-1.996 4.412-5.57 6.052-8.631-2.59 1.927-5.566 4.66-7.302 6.792-.442.543-.795 1.243-1.042 1.826-.121.288-.214.54-.275.72v.001l.575.575zm-4.973 3.04.007-.005zm3.582-3.043.002.001h-.002z"></path>
                    </svg>
                </button>
                <button @onclick="EnableEraser" type="button" class="btn border-white border-rounded border-2 m-1  @(EraserActive ? "shape-button-selected" : "shape-button")">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eraser-fill" viewBox="0 0 16 16">
                        <path d="M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293z" />
                    </svg>
                </button>
@*                 <button @onclick='() => AddShape("square")' type="button" class="btn border-white border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"></path>
                    </svg>
                </button> *@

                @*                 <button @onclick="AddSquare" type="button" class="btn border-white border-rounded border-2 m-1 shape-button">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-square" viewBox="0 0 16 16">
            <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"></path>
            </svg>
            </button> *@
                <button @onclick="ToggleObjectsSelectability" type="button" class="btn border-white border-rounded border-2 m-1 @(SelectableObjectsActive ? "shape-button-selected" : "shape-button")">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-index" viewBox="0 0 16 16">
                        <path d="M6.75 1a.75.75 0 0 1 .75.75V8a.5.5 0 0 0 1 0V5.467l.086-.004c.317-.012.637-.008.816.027.134.027.294.096.448.182.077.042.15.147.15.314V8a.5.5 0 1 0 1 0V6.435l.106-.01c.316-.024.584-.01.708.04.118.046.3.207.486.43.081.096.15.19.2.259V8.5a.5.5 0 0 0 1 0v-1h.342a1 1 0 0 1 .995 1.1l-.271 2.715a2.5 2.5 0 0 1-.317.991l-1.395 2.442a.5.5 0 0 1-.434.252H6.035a.5.5 0 0 1-.416-.223l-1.433-2.15a1.5 1.5 0 0 1-.243-.666l-.345-3.105a.5.5 0 0 1 .399-.546L5 8.11V9a.5.5 0 0 0 1 0V1.75A.75.75 0 0 1 6.75 1M8.5 4.466V1.75a1.75 1.75 0 1 0-3.5 0v5.34l-1.2.24a1.5 1.5 0 0 0-1.196 1.636l.345 3.106a2.5 2.5 0 0 0 .405 1.11l1.433 2.15A1.5 1.5 0 0 0 6.035 16h6.385a1.5 1.5 0 0 0 1.302-.756l1.395-2.441a3.5 3.5 0 0 0 .444-1.389l.271-2.715a2 2 0 0 0-1.99-2.199h-.581a5 5 0 0 0-.195-.248c-.191-.229-.51-.568-.88-.716-.364-.146-.846-.132-1.158-.108l-.132.012a1.26 1.26 0 0 0-.56-.642 2.6 2.6 0 0 0-.738-.288c-.31-.062-.739-.058-1.05-.046zm2.094 2.025" />
                    </svg>
                </button>
            </div>
        </div>
        <div class="row">
            <div class="col d-flex">
                <button @onclick='() => AddShape("rectangle")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("circle")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("triangle")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-triangle" viewBox="0 0 16 16">
                        <path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z"></path>
                    </svg>
                </button>
                <button @onclick='() => AddShape("pentagon")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pentagon" viewBox="0 0 16 16">
                        <path d="M7.685 1.545a.5.5 0 0 1 .63 0l6.263 5.088a.5.5 0 0 1 .161.539l-2.362 7.479a.5.5 0 0 1-.476.349H4.099a.5.5 0 0 1-.476-.35L1.26 7.173a.5.5 0 0 1 .161-.54l6.263-5.087Zm8.213 5.28a.5.5 0 0 0-.162-.54L8.316.257a.5.5 0 0 0-.631 0L.264 6.286a.5.5 0 0 0-.162.538l2.788 8.827a.5.5 0 0 0 .476.349h9.268a.5.5 0 0 0 .476-.35l2.788-8.826Z" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("star")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("cylinder")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg width="16" height="16" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.4995 2.7998C9.17945 2.7998 5.93945 4.5442 5.93945 6.8598V21.4198C5.93945 21.5292 5.96542 21.6369 6.01505 21.7334C6.52805 23.7522 9.61955 25.1998 13.4995 25.1998C17.3794 25.1998 20.4493 23.7634 20.9785 21.753C21.0317 21.6506 21.0596 21.5361 21.0595 21.4198V6.8598C21.0595 4.5442 17.8195 2.7998 13.4995 2.7998ZM19.7095 21.2294L19.6933 21.2994C19.4908 22.5062 16.9528 23.7998 13.4995 23.7998C10.0462 23.7998 7.50815 22.5062 7.30565 21.2994L7.28945 21.2294V9.2398L7.33535 9.2706L7.49735 9.391C7.52624 9.40803 7.55419 9.42672 7.58105 9.447L7.79165 9.5814L7.84295 9.6122C7.93475 9.6682 8.02655 9.7186 8.11295 9.7718L8.18045 9.8054L8.40725 9.9202L8.51255 9.9678L8.72315 10.0602L8.83385 10.1078C8.91215 10.1386 8.98775 10.1694 9.06875 10.1974L9.16595 10.2338C9.27935 10.2758 9.39545 10.315 9.51155 10.3514C9.62495 10.3878 9.74375 10.4242 9.85985 10.455L9.97595 10.4858L10.246 10.553L10.381 10.5838L10.651 10.6398L10.786 10.6678L11.0938 10.7238L11.1856 10.7406C11.3206 10.7602 11.4556 10.7826 11.5933 10.7994H11.6986L12.0145 10.8358H12.1657L12.4519 10.8582H12.6085L12.9136 10.875H13.054L13.4995 10.9198H13.9504H14.0908L14.3959 10.903H14.5525L14.8495 10.861H15.0007L15.3166 10.8246H15.4219C15.5596 10.8078 15.6919 10.7854 15.8296 10.7658L15.9214 10.749L16.2292 10.693L16.3642 10.665L16.6342 10.609L16.7692 10.5782L17.0392 10.511L17.1553 10.4802C17.2714 10.4494 17.3902 10.413 17.5036 10.3766C17.6197 10.3402 17.7358 10.301 17.8492 10.259L17.9464 10.2226C18.0274 10.1946 18.103 10.1638 18.1813 10.133L18.292 10.0854L18.5026 9.993L18.6079 9.9454L18.8347 9.8306L18.9022 9.797C18.9994 9.7438 19.0912 9.6934 19.1722 9.6374L19.2235 9.6066L19.4341 9.4722C19.4609 9.45192 19.4889 9.43323 19.5178 9.4162L19.6798 9.2958L19.7095 9.2398V21.2294ZM13.4995 9.5198C10.5673 9.5198 7.28945 8.383 7.28945 6.8598C7.28945 5.3366 10.5673 4.1998 13.4995 4.1998C16.4317 4.1998 19.7095 5.3366 19.7095 6.8598C19.7095 8.383 16.4317 9.5198 13.4995 9.5198Z" fill="white" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("hexagon")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg width="16" height="16" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19.4679 23.8002H8.53039C8.21539 23.8002 7.92445 23.6366 7.76914 23.371L2.30039 14.021C2.14727 13.7596 2.14727 13.4408 2.30039 13.1816L7.76914 3.83159C7.92445 3.56597 8.21539 3.40234 8.53039 3.40234H19.4679C19.7829 3.40234 20.0738 3.56597 20.2291 3.83159L25.6979 13.1816C25.851 13.443 25.851 13.7617 25.6979 14.021L20.2291 23.371C20.0738 23.6366 19.7829 23.8002 19.4679 23.8002ZM9.04008 22.1002H18.9582L23.9304 13.6002L18.9582 5.10022H9.04008L4.06789 13.6002L9.04008 22.1002Z" fill="white" />
                    </svg>
                </button>
            </div>
        </div>
        <div class="row">
            <div class="col d-flex">
                <button @onclick='() => AddShape("heart")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                        <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143q.09.083.176.171a3 3 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("moon")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-moon" viewBox="0 0 16 16">
                        <path d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278M4.858 1.311A7.27 7.27 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.32 7.32 0 0 0 5.205-2.162q-.506.063-1.029.063c-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("sun")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sun" viewBox="0 0 16 16">
                        <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6m0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("trapezoid")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg width="16" height="16" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M23.9695 22.5248H2.03202C1.7903 22.5248 1.5628 22.4122 1.40843 22.2188C1.25406 22.0254 1.19109 21.7683 1.23374 21.5218L4.07749 5.3718C4.14859 4.96805 4.48374 4.6748 4.87577 4.6748H21.1258C21.5178 4.6748 21.853 4.96805 21.9241 5.3718L24.7678 21.5218C24.8125 21.7704 24.7475 22.0254 24.5931 22.2188C24.4387 22.4122 24.2092 22.5248 23.9695 22.5248ZM3.00702 20.8248H22.9925L20.4473 6.3748H5.55218L3.00702 20.8248Z" fill="white" />
                    </svg>

                </button>
                <button @onclick='() => AddShape("parallelogram")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg width="16" height="16" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M22.3588 22.5248H1.265C1.00977 22.5248 0.769301 22.4101 0.608988 22.2103C0.448676 22.0106 0.385394 21.7492 0.438129 21.5006L3.81524 5.35055C3.8975 4.95743 4.24133 4.6748 4.64 4.6748H25.7338C25.989 4.6748 26.2295 4.78955 26.3898 4.9893C26.5501 5.18905 26.6134 5.45043 26.5606 5.69905L23.1856 21.8491C23.1034 22.2422 22.7595 22.5248 22.3609 22.5248H22.3588ZM2.30493 20.8248H21.6732L24.6938 6.3748H5.32555L2.30493 20.8248Z" fill="white" />
                    </svg>

                </button>
                <button @onclick='() => AddShape("cylinder")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg width="16" height="16" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.4995 2.7998C9.17945 2.7998 5.93945 4.5442 5.93945 6.8598V21.4198C5.93945 21.5292 5.96542 21.6369 6.01505 21.7334C6.52805 23.7522 9.61955 25.1998 13.4995 25.1998C17.3794 25.1998 20.4493 23.7634 20.9785 21.753C21.0317 21.6506 21.0596 21.5361 21.0595 21.4198V6.8598C21.0595 4.5442 17.8195 2.7998 13.4995 2.7998ZM19.7095 21.2294L19.6933 21.2994C19.4908 22.5062 16.9528 23.7998 13.4995 23.7998C10.0462 23.7998 7.50815 22.5062 7.30565 21.2994L7.28945 21.2294V9.2398L7.33535 9.2706L7.49735 9.391C7.52624 9.40803 7.55419 9.42672 7.58105 9.447L7.79165 9.5814L7.84295 9.6122C7.93475 9.6682 8.02655 9.7186 8.11295 9.7718L8.18045 9.8054L8.40725 9.9202L8.51255 9.9678L8.72315 10.0602L8.83385 10.1078C8.91215 10.1386 8.98775 10.1694 9.06875 10.1974L9.16595 10.2338C9.27935 10.2758 9.39545 10.315 9.51155 10.3514C9.62495 10.3878 9.74375 10.4242 9.85985 10.455L9.97595 10.4858L10.246 10.553L10.381 10.5838L10.651 10.6398L10.786 10.6678L11.0938 10.7238L11.1856 10.7406C11.3206 10.7602 11.4556 10.7826 11.5933 10.7994H11.6986L12.0145 10.8358H12.1657L12.4519 10.8582H12.6085L12.9136 10.875H13.054L13.4995 10.9198H13.9504H14.0908L14.3959 10.903H14.5525L14.8495 10.861H15.0007L15.3166 10.8246H15.4219C15.5596 10.8078 15.6919 10.7854 15.8296 10.7658L15.9214 10.749L16.2292 10.693L16.3642 10.665L16.6342 10.609L16.7692 10.5782L17.0392 10.511L17.1553 10.4802C17.2714 10.4494 17.3902 10.413 17.5036 10.3766C17.6197 10.3402 17.7358 10.301 17.8492 10.259L17.9464 10.2226C18.0274 10.1946 18.103 10.1638 18.1813 10.133L18.292 10.0854L18.5026 9.993L18.6079 9.9454L18.8347 9.8306L18.9022 9.797C18.9994 9.7438 19.0912 9.6934 19.1722 9.6374L19.2235 9.6066L19.4341 9.4722C19.4609 9.45192 19.4889 9.43323 19.5178 9.4162L19.6798 9.2958L19.7095 9.2398V21.2294ZM13.4995 9.5198C10.5673 9.5198 7.28945 8.383 7.28945 6.8598C7.28945 5.3366 10.5673 4.1998 13.4995 4.1998C16.4317 4.1998 19.7095 5.3366 19.7095 6.8598C19.7095 8.383 16.4317 9.5198 13.4995 9.5198Z" fill="white" />
                    </svg>
                </button>
                <button @onclick='() => AddShape("drop")' type="button" class="btn border-rounded border-2 m-1 shape-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-droplet" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M7.21.8C7.69.295 8 0 8 0q.164.544.371 1.038c.812 1.946 2.073 3.35 3.197 4.6C12.878 7.096 14 8.345 14 10a6 6 0 0 1-12 0C2 6.668 5.58 2.517 7.21.8m.413 1.021A31 31 0 0 0 5.794 3.99c-.726.95-1.436 2.008-1.96 3.07C3.304 8.133 3 9.138 3 10a5 5 0 0 0 10 0c0-1.201-.796-2.157-2.181-3.7l-.03-.032C9.75 5.11 8.5 3.72 7.623 1.82z" />
                        <path fill-rule="evenodd" d="M4.553 7.776c.82-1.641 1.717-2.753 2.093-3.13l.708.708c-.29.29-1.128 1.311-1.907 2.87z" />
                    </svg>
                </button>
            </div>
        </div>
    </div>
}


@if (CardType == "color")
{
    <div class="container h-40 w-80 p-3 colors-card mb-5">
        <div class="row p-1 m-1 text-white">Colori</div>
        @foreach (var colorRow in ColorChoices)
        {
            <div class="row">
                <div class="col d-flex">
                    @foreach (var colorPick in colorRow)
                    {
                        <button @onclick='@(() => SelectColor(colorPick))' type="button" class="btn border-black border-2 m-1 @(SelectedColor ==  colorPick ? "color-button-selected" : "color-button")" style="background-color: @("var("+(colorPick)+")");">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="transparent" viewBox="0 0 16 16"></svg>
                        </button>

                    }
                </div>
            </div>
        }
    </div>
}

@* @if (CardType == "number")
{
    <div class="container h-40 w-80 p-3 maths-card">
        <div class="row p-1 m-1 text-white">Colori</div>
        @foreach (var colorRow in ColorChoices)
        {
            <div class="row">
                <div class="col d-flex">
                    @foreach (var colorPick in colorRow)
                    {
                        <button @onclick='() => ToggleBrush("pencil")' type="button" class="btn border-white border-2 m-1 @(PencilActive ? "maths-button-selected" : "maths-button") pencil-button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-1" viewBox="0 0 16 16">
                                <path d="M7.5 12V5.5H6.5V4h2V12h-1z" />
                            </svg>
                        </button>                                                
                    }
                </div>
            </div>
        }
    </div>
}
 *@

@code {
    [Parameter]
    public string CardType { get; set; }

    private IJSObjectReference? _fabricModule;
    private IJSObjectReference _drawModule = null!;
    private bool _isModuleLoaded = false;
    private bool canvasDisplay = false;

    List<List<string>> ColorChoices = new List<List<string>>
    {
        new List<string> { "--mem-color-plum-grey", "--mem-color-raspberry-magenta", "--mem-color-fuchsia-rose", "--mem-color-berry-pink", "--mem-color-bubblegum-pink", "--mem-color-crimson-red", "--mem-color-sunset-coral" },
        new List<string> { "--mem-color-flame-orange", "--mem-color-tangerine", "--mem-color-marigold-yellow", "--mem-color-amber-orange", "--mem-color-citrus-lime", "--mem-color-lemon-glow", "--mem-color-dijon-mustard" },
        new List<string> { "--mem-color-fresh-lime", "--mem-color-spring-green", "--mem-color-moss-olive", "--mem-color-meadow-green", "--mem-color-woodland-green", "--mem-color-deep-teal-green", "--mem-color-arctic-blue" },
        new List<string> { "--mem-color-sapphire-blue", "--mem-color-cornflower-blue", "--mem-color-midnight-blue", "--mem-color-velvet-indigo", "--mem-color-onyx-black", "--mem-color-graphite-grey", "--mem-color-ash-grey" },
        new List<string> { "--mem-color-silver-mist", "--mem-color-snow-white" }
    };

    public bool PencilActive { get; set; }
    public bool SmallBrushActive { get; set; }
    public bool MediumBrushActive { get; set; }
    public bool BigBrushActive { get; set; }
    public bool EraserActive { get; set; }
    public bool SelectableObjectsActive { get; set; }

    public string SelectedColor = "--mem-color-plum-grey";
    // public string SelectedColor
    // {
    //     get => _selectedColor;
    //     set
    //     {
    //         if (_selectedColor != value)
    //         {
    //             _selectedColor = value;
    //             Console.WriteLine($"SelectedColor updated to: {_selectedColor}");  // Debugging output
    //             StateHasChanged();  // Force a UI refresh
    //         }
    //     }
    // }



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Import the JavaScript module after the component has rendered
            _drawModule = await JS.InvokeAsync<IJSObjectReference>(
                "import", "./Pages/DrawCard.razor.js");

            // Mark the module as loaded and re-render the component
            if (_drawModule != null)
            {
                _isModuleLoaded = true;
                // StateHasChanged(); // Trigger re-rendering to add the canvas element
            }
        }

    }




    // private async Task EnableBrush()
    // {
    //     // After the canvas is rendered, initialize it using JS interop
    //     if (_drawModule != null && _isModuleLoaded)
    //     {
    //         await _drawModule.InvokeVoidAsync("enableBrush");
    //     }
    // }

    // private async Task EnablePencil()
    // {
    //     // After the canvas is rendered, initialize it using JS interop
    //     if (_drawModule != null && _isModuleLoaded)
    //     {
    //         await _drawModule.InvokeVoidAsync("togglePencil");
    //     }
    // }

    private void UpdateBrushesSelection(bool[] brushes)
    {
        PencilActive = brushes[0];
        SmallBrushActive = brushes[1];
        MediumBrushActive = brushes[2];
        BigBrushActive = brushes[3];
        EraserActive = brushes[4];
        SelectableObjectsActive = brushes[5];
    }

    private async Task ToggleBrush(string brushType)
    {
        // After the canvas is rendered, initialize it using JS interop
        if (_drawModule != null && _isModuleLoaded)
        {
            await _drawModule.InvokeVoidAsync("toggleBrush", brushType, SelectedColor);
            var brushesSelectionValues = await _drawModule.InvokeAsync<bool[]>("getCurrentBrushesSelection");
            UpdateBrushesSelection(brushesSelectionValues);
        }
    }

    private async Task EnableEraser()
    {
        // After the canvas is rendered, initialize it using JS interop
        if (_drawModule != null && _isModuleLoaded)
        {
            await _drawModule.InvokeVoidAsync("enableEraser");
            var brushesSelectionValues = await _drawModule.InvokeAsync<bool[]>("getCurrentBrushesSelection");
            UpdateBrushesSelection(brushesSelectionValues);
        }
    }

    private async Task ToggleObjectsSelectability()
    {
        await _drawModule.InvokeVoidAsync("activateAllObjectsSelection");
        // SelectableObjectsActive = await _drawModule.InvokeAsync<bool>("activateAllObjectsSelection");
        var brushesSelectionValues = await _drawModule.InvokeAsync<bool[]>("getCurrentBrushesSelection");
        UpdateBrushesSelection(brushesSelectionValues);
    }


    private async Task AddShape(string shape)
    {
        if (_isModuleLoaded)
        {
            if (_drawModule != null && _isModuleLoaded)
            {
                var customOptions = new Dictionary<string, object>
                {
                    { "fill", SelectedColor }
                };
                await _drawModule.InvokeVoidAsync("addShape", shape, customOptions);
                var brushesSelectionValues = await _drawModule.InvokeAsync<bool[]>("getCurrentBrushesSelection");
                UpdateBrushesSelection(brushesSelectionValues);
            }
        }
    }

    private async Task SelectColor(string color)
    {
        if (_isModuleLoaded)
        {
            if (_drawModule != null && _isModuleLoaded)
            {
                // SelectedColor = color;
                SelectedColor = await _drawModule.InvokeAsync<string>("selectColor", color);
                // Console.WriteLine($"SelectedColor updated to: {SelectedColor}"); // Debugging output
                // var brushesSelectionValues = await _drawModule.InvokeAsync<bool[]>("getCurrentBrushesSelection");
                // UpdateBrushesSelection(brushesSelectionValues);
                // StateHasChanged();
            }
        }
    }



}
